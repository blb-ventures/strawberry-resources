[tool.poetry]
name = "strawberry-resources"
version = "0.4.0"
description = "Introspection utilities to extract data from strawberry graphql"
authors = ["Thiago Bellini Ribeiro <thiago@bellini.dev>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/blb-ventures/strawberry-resources"
repository = "https://github.com/blb-ventures/strawberry-resources"
documentation = "https://github.com/blb-ventures/strawberry-resources"
keywords = ["strawberry", "django", "graphql", "resources", "forms"]
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Environment :: Web Environment",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
]
packages = [{ include = "strawberry_resources" }]
include = ["strawberry_resources/py.typed"]

[tool.poetry.scripts]
strawberry_resources = "strawberry_resources.cli:run"

[tool.poetry.dependencies]
python = "^3.8"
strawberry-graphql = ">= 0.140.3"
strawberry-graphql-django = { version = ">=0.8", optional = true }
strawberry-django-plus = { version = ">=2.0", optional = true }
django = { version = ">=3.2", optional = true }
django-choices-field = { version = ">=2.0", optional = true }
typing-extensions = ">= 4.2.0"
click = ">=8.1.3"

[tool.poetry.group.dev.dependencies]
black = "^23.1.0"
strawberry-graphql-django = "^0.9.2"
strawberry-django-plus = "^2.0"
django = "^4.1.0"
django-choices-field = "^2.0"
django-types = "^0.17.0"
django-phonenumber-field = "^7.0.0"
codecov = "^2.1.12"
pytest = "^7.1.2"
pytest-cov = "^4.0.0"
ipython = "^8.4.0"
pytest-asyncio = "^0.20.1"
ruff = "^0.0.246"
pytest-django = "^4.5.2"

[tool.poetry.extras]
django = ["django", "strawberry-graphql-django"]
django-plus = [
  "django",
  "strawberry-graphql-django",
  "strawberry-django-plus",
  "django-choices-field",
]

[tool.ruff]
line-length = 100
select = [
  "E",
  "F",
  "W",
  "I",
  "N",
  "UP",
  "YTT",
  "D2",
  "D3",
  "D4",
  "BLE",
  "B",
  "A",
  "COM",
  "C4",
  "DTZ",
  "T10",
  "EXE",
  "ISC",
  "ICN001",
  "G",
  "INP",
  "PIE",
  "T20",
  "PT",
  "Q",
  # "RET",
  "SIM",
  "TID",
  "TCH",
  "PTH",
  "ERA",
  "PGH",
  "PL",
  "RSE",
  "RUF",
]
ignore = [
  "D203",
  "D213",
  "TCH001",
  "TCH002",
  "TCH003",
  "PGH003",
  "PLR09",
  "PLR2004",
]
target-version = "py38"
exclude = [
  ".eggs",
  ".git",
  ".hg",
  ".mypy_cache",
  ".tox",
  ".venv",
  "__pycached__",
  "_build",
  "buck-out",
  "build",
  "dist",
]

[tool.ruff.pyupgrade]

[tool.ruff.isort]
known-first-party = ["strawberry-django-plus"]

[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311']
preview = true
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | __pycached__
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.pyright]
pythonVersion = "3.8"
useLibraryCodeForTypes = true
venvPath = "."
venv = ".venv"
ignore = ["**/migrations"]
reportCallInDefaultInitializer = "warning"
reportMatchNotExhaustive = "warning"
reportMissingSuperCall = "warning"
reportOverlappingOverload = "warning"
reportUninitializedInstanceVariable = "none"
reportUnnecessaryCast = "warning"
reportUnnecessaryTypeIgnoreComment = "warning"
reportUntypedNamedTuple = "error"
reportUnusedExpression = "warning"
reportUnnecessaryComparison = "warning"
reportUnnecessaryContains = "warning"
strictDictionaryInference = true
strictListInference = true
strictSetInference = true

[tool.pytest.ini_options]
python_files = "tests/test_*.py"
DJANGO_SETTINGS_MODULE = "tests.django_settings"
addopts = "-p no:warnings --cov=./ --cov-report term-missing:skip-covered"
asyncio_mode = "auto"
testpaths = ["tests/"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
